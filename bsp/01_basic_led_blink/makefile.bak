
CROSS_COMPILE=arm-none-eabi-

CC=$(CROSS_COMPILE)gcc
LD=$(CROSS_COMPILE)ld
AR=$(CROSS_COMPILE)ar
AS=$(CROSS_COMPILE)as
OC=$(CROSS_COMPILE)objcopy
OD=$(CROSS_COMPILE)objdump
SZ=$(CROSS_COMPILE)size

TARGET_PLATFORM := n32g4fr
OUTPUT_DIR = output
TARGET  = $(OUTPUT_DIR)/main
TOOL_NAME = --target=arm-arm-none-eabi
LDSCRIPT = ./../../libraries/CMSIS/n32g4fr_flash.ld
STARTUP = ./../../libraries/CMSIS/startup/startup_n32g4fr_gcc.s
CPU = ../../rt-thread/libcpu/context_gcc.S
MCU = -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16 -mfloat-abi=hard 
DEFS = -DN32G4FR -DUSE_STDPERIPH_DRIVERPARAMS


LFLAGS += $(MCU)
LFLAGS += -Wl,--gc-sections
LFLAGS += --specs=nosys.specs
LFLAGS += -Xlinker -zmuldefs 
# -Map=$(TARGET).map


C_INCS = -I../01_basic_led_blink
C_INCS += -I../../drivers
C_INCS += -I../../libraries/CMSIS/inc 
C_INCS += -I../../libraries/n32g4fr_hal/inc 
C_INCS += -I../../rt-thread/include 
C_INCS += -I../../rt-thread/include/libc 
C_INCS += -I../../rt-thread/drivers/include 
C_INCS += -I../../rt-thread/drivers/include/ipc 
C_INCS += -I../../rt-thread/drivers/include/drivers 
C_INCS += -I./user/inc


CFLAGS = $(MCU) 
CFLAGS += -std=c99 -Dgcc
CFLAGS += -ffunction-sections 	-fdata-sections  # -fno-common 	
CFLAGS += -g3 -Wall -O1

SRCS += ./user/src/board.c     
SRCS += ./user/src/main.c     
SRCS += ./user/src/n32g4fr_it.c     
SRCS += ../../drivers/drv_gpio.c     
SRCS += ../../drivers/drv_usart.c     
SRCS += ../../libraries/CMSIS/src/system_n32g4fr.c     
SRCS += ../../libraries/n32g4fr_hal/src/misc.c     
SRCS += ../../libraries/n32g4fr_hal/src/n32g4fr_exti.c     
SRCS += ../../libraries/n32g4fr_hal/src/n32g4fr_rcc.c     
SRCS += ../../libraries/n32g4fr_hal/src/n32g4fr_sdio.c     
SRCS += ../../libraries/n32g4fr_hal/src/n32g4fr_gpio.c     
SRCS += ../../libraries/n32g4fr_hal/src/n32g4fr_usart.c     
SRCS += ../../rt-thread/libcpu/cpuport.c     
SRCS += ../../rt-thread/src/clock.c     
SRCS += ../../rt-thread/src/components.c     
SRCS += ../../rt-thread/src/cpu.c     
SRCS += ../../rt-thread/src/device.c     
SRCS += ../../rt-thread/src/idle.c     
SRCS += ../../rt-thread/src/ipc.c     
SRCS += ../../rt-thread/src/irq.c     
SRCS += ../../rt-thread/src/kservice.c     
SRCS += ../../rt-thread/src/mem.c     
SRCS += ../../rt-thread/src/memheap.c     
SRCS += ../../rt-thread/src/mempool.c     
SRCS += ../../rt-thread/src/object.c     
SRCS += ../../rt-thread/src/scheduler.c     
SRCS += ../../rt-thread/src/signal.c     
SRCS += ../../rt-thread/src/slab.c     
SRCS += ../../rt-thread/src/thread.c     
SRCS += ../../rt-thread/src/timer.c     
SRCS += ../../rt-thread/drivers/misc/pin.c     
SRCS += ../../rt-thread/drivers/src/completion.c     
SRCS += ../../rt-thread/drivers/serial/serial.c     

# compile src of N32G4FR
SRC_OBJECTS =$(addprefix $(OUTPUT_DIR)/, $(notdir $(SRCS:.c=.o)))
STARTUP_OBJECTS = $(addprefix $(OUTPUT_DIR)/,$(notdir $(STARTUP:.s=.o)))
CPU_OBJECTS += $(addprefix $(OUTPUT_DIR)/,$(notdir $(CPU:.S=.o)))


.PHONY : clean all

all:$(SRC_OBJECTS) $(STARTUP_OBJECTS) $(CPU_OBJECTS) $(TARGET).elf


$(SRC_OBJECTS) : $(SRCS) Makefile | $(OUTPUT_DIR) 
	$(CC) $(CFLAGS) $(DEFS) $(C_INCS)  -Wa,-a,-ad,-alms=$(TARGET).lst -c  $< -o $@ 
$(STARTUP_OBJECTS) : $(STARTUP) Makefile | $(OUTPUT_DIR) 
	$(CC) $(CFLAGS) -c  $< -o $@ 
$(CPU_OBJECTS) : $(CPU) Makefile | $(OUTPUT_DIR) 
	$(CC) $(CFLAGS) -Wa,-mimplicit-it=thumb -c  $< -o $@ 
$(TARGET).elf : $(SRC_OBJECTS) $(STARTUP_OBJECTS) $(CPU_OBJECTS) Makefile | $(OUTPUT_DIR) 
	$(CC) $(SRC_OBJECTS) $(STARTUP_OBJECTS) $(CPU_OBJECTS)  $(LFLAGS) -T $(LDSCRIPT) -o $@
	$(SZ) $@

	
# @echo $(CC) $(CFLAGS) $(DEFS) $(C_INCS) 
# -c  $< -o $@
# -Wa,-a,-ad,-alms=$(OUTPUT_DIR)/$(notdir $(<:.c=.lst)) 
# $< -o $@
    
# $(OUTPUT_DIR)/%.o: %.s Makefile | $(OUTPUT_DIR)
# 	$(CC) $(CFLAGS) -c $< -o $@
    
# $(TARGET).elf: $(OBJECTS) Makefile
# 	$(CC) $(OBJECTS) $(LFLAGS) -T$(LDSCRIPT) -o $@
# 	$(SZ) $@
	
$(OUTPUT_DIR):
	@-mkdir $@



clean:
	-find $(OUTPUT_DIR)  -name '*.o'  -exec rm {} \;
	-find $(OUTPUT_DIR) -name '*.elf' -exec rm {} \;
	-find $(OUTPUT_DIR) -name '*.lst' -exec rm {} \;
	-find $(OUTPUT_DIR) -name '*.out' -exec rm {} \;
	-find $(OUTPUT_DIR) -name '*.bin' -exec rm {} \;
	-find $(OUTPUT_DIR) -name '*.map' -exec rm {} \;
