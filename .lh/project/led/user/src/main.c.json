{
    "sourceFile": "project/led/user/src/main.c",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 53,
            "patches": [
                {
                    "date": 1671539139122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1671539145289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,8 +135,8 @@\n     while(1)\n     {\n         rt_thread_delay(50);\n     }\n-    rsh\n+    \n }\n \n /*@}*/\n"
                },
                {
                    "date": 1671539254420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,24 +91,9 @@\n         rt_pin_write(LED3_PIN, PIN_LOW);\n     }\n }\n \n-#ifdef RT_USING_RTGUI\n-rt_bool_t cali_setup(void)\n-{\n-    rt_kprintf(\"cali setup entered\\n\");\n-    return RT_FALSE;\n-}\n \n-void cali_store(struct calibration_data *data)\n-{\n-    rt_kprintf(\"cali finished (%d, %d), (%d, %d)\\n\",\n-               data->min_x,\n-               data->max_x,\n-               data->min_y,\n-               data->max_y);\n-}\n-#endif /* RT_USING_RTGUI */\n \n /**\n  * @brief  Main program\n  */\n"
                },
                {
                    "date": 1671539330935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,11 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n+\n+    rt_thread_create()\n+\n     while(1)\n     {\n         rt_thread_delay(50);\n     }\n"
                },
                {
                    "date": 1671539341557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n         rt_thread_startup(&led1_thread);\n     }\n \n \n-    rt_thread_create()\n+    rt_thread_create(\"led0\")\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539347649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n         rt_thread_startup(&led1_thread);\n     }\n \n \n-    rt_thread_create(\"led0\")\n+    rt_thread_create(\"led0\",*led0)\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539355580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n         rt_thread_startup(&led1_thread);\n     }\n \n \n-    rt_thread_create(\"led0\",*led0)\n+    rt_thread_create(\"led0\",*led0_thread_entry,\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539362050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n         rt_thread_startup(&led1_thread);\n     }\n \n \n-    rt_thread_create(\"led0\",*led0_thread_entry,\n+    rt_thread_create(\"led0\",*led0_thread_entry,RT_NULL,)\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539389290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n         rt_thread_startup(&led1_thread);\n     }\n \n \n-    rt_thread_create(\"led0\",*led0_thread_entry,RT_NULL,)\n+    rt_thread_create(\"led0\",*led0_thread_entry,RT_NULL,&led0_stack)\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539396973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n         rt_thread_startup(&led1_thread);\n     }\n \n \n-    rt_thread_create(\"led0\",*led0_thread_entry,RT_NULL,&led0_stack)\n+    rt_thread_create(\"led0\",*led0_thread_entry,RT_NULL,&led0_stack[0],5,)\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539402136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,11 +116,10 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n+    rt_thread_create(\"led0\", *led0_thread_entry, RT_NULL, &led0_stack[0], 5, 10);\n \n-    rt_thread_create(\"led0\",*led0_thread_entry,RT_NULL,&led0_stack[0],5,)\n-\n     while(1)\n     {\n         rt_thread_delay(50);\n     }\n"
                },
                {
                    "date": 1671539426424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    rt_thread_create(\"led0\", *led0_thread_entry, RT_NULL, &led0_stack[0], 5, 10);\n+    msh\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539432708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    msh\n+    MSH_CMD_EXPORT(\"\")\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539439168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    MSH_CMD_EXPORT(\"\")\n+    MSH_CMD_EXPORT(\"led0\",)\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539453313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    MSH_CMD_EXPORT(\"led0\",)\n+    MSH_CMD_EXPORT(\"led0\", \"led0\");\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539466805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    MSH_CMD_EXPORT(\"led0\", \"led0\");\n+    MSH_CMD_EXPORT(led, \"led0\");\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539472862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    MSH_CMD_EXPORT(led, \"led0\");\n+    MSH_CMD_EXPORT(led0, led0);\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539479005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    MSH_CMD_EXPORT(led0, led0);\n+    MSH_CMD_EXPORT(led0, example_led0);\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539484598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,8 +117,9 @@\n         rt_thread_startup(&led1_thread);\n     }\n \n     MSH_CMD_EXPORT(led0, example_led0);\n+    MSH_CMD_EXPORT(led0, example_led0);\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539519169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,10 +116,10 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    MSH_CMD_EXPORT(led0, example_led0);\n-    MSH_CMD_EXPORT(led0, example_led0);\n+    MSH_CMD_EXPORT(led0_thread_entry, example_led0);\n+    MSH_CMD_EXPORT(led1, example_led1);\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539525547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,10 +116,10 @@\n     {\n         rt_thread_startup(&led1_thread);\n     }\n \n-    MSH_CMD_EXPORT(led0_thread_entry, example_led0);\n-    MSH_CMD_EXPORT(led1, example_led1);\n+    MSH_CMD_EXPORT(led0_thread_entry, led0);\n+    MSH_CMD_EXPORT(led1, led1);\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539695058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,23 +103,23 @@\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n \n-    /* init led0 thread */\n-    result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n-    if (result == RT_EOK)\n-    {\n-        rt_thread_startup(&led0_thread);\n-    }\n-    /* init led1 thread */\n-    result = rt_thread_init(&led1_thread, \"led1\", led1_thread_entry, RT_NULL, (rt_uint8_t*)&led1_stack[0], sizeof(led1_stack), 5, 5);\n-    if (result == RT_EOK)\n-    {\n-        rt_thread_startup(&led1_thread);\n-    }\n+    // /* init led0 thread */\n+    // result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n+    // if (result == RT_EOK)\n+    // {\n+    //     rt_thread_startup(&led0_thread);\n+    // }\n+    // /* init led1 thread */\n+    // result = rt_thread_init(&led1_thread, \"led1\", led1_thread_entry, RT_NULL, (rt_uint8_t*)&led1_stack[0], sizeof(led1_stack), 5, 5);\n+    // if (result == RT_EOK)\n+    // {\n+    //     rt_thread_startup(&led1_thread);\n+    // }\n \n     MSH_CMD_EXPORT(led0_thread_entry, led0);\n-    MSH_CMD_EXPORT(led1, led1);\n+    MSH_CMD_EXPORT(led1_thread_entry, led1);\n \n     while(1)\n     {\n         rt_thread_delay(50);\n"
                },
                {
                    "date": 1671539896041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,8 +103,10 @@\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n \n+    rt\n+\n     // /* init led0 thread */\n     // result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n     // if (result == RT_EOK)\n     // {\n@@ -119,12 +121,12 @@\n \n     MSH_CMD_EXPORT(led0_thread_entry, led0);\n     MSH_CMD_EXPORT(led1_thread_entry, led1);\n \n-    while(1)\n-    {\n-        rt_thread_delay(50);\n-    }\n+    // while(1)\n+    // {\n+    //     rt_thread_delay(50);\n+    // }\n     \n }\n \n /*@}*/\n"
                },
                {
                    "date": 1671539902978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n \n-    rt\n+    rt_kprintf()\n \n     // /* init led0 thread */\n     // result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n     // if (result == RT_EOK)\n"
                },
                {
                    "date": 1671539909613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n \n-    rt_kprintf()\n+    rt_kprintf(\"UART1\")\n \n     // /* init led0 thread */\n     // result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n     // if (result == RT_EOK)\n"
                },
                {
                    "date": 1671540198286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n \n-    rt_kprintf(\"UART1\")\n+    rt_kprintf(\"UART1\");\n \n     // /* init led0 thread */\n     // result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n     // if (result == RT_EOK)\n@@ -118,9 +118,9 @@\n     // {\n     //     rt_thread_startup(&led1_thread);\n     // }\n \n-    MSH_CMD_EXPORT(led0_thread_entry, led0);\n+    MSH_CMD_EXPORT(led0, led0);\n     MSH_CMD_EXPORT(led1_thread_entry, led1);\n \n     // while(1)\n     // {\n"
                },
                {
                    "date": 1671540205760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n \n /**\n  * @brief  led0 thread entry\n  */\n-static void led0_thread_entry(void* parameter)\n+static void led0(void* parameter)\n {\n     while(1)\n     {\n         rt_thread_delay(50);    //delay 500ms\n"
                },
                {
                    "date": 1671541021693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,10 @@\n }\n \n \n \n+\n+\n /**\n  * @brief  Main program\n  */\n int main(void)\n"
                },
                {
                    "date": 1671541028224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,11 +92,13 @@\n     }\n }\n \n \n+void hello(){\n+    \n+}\n \n \n-\n /**\n  * @brief  Main program\n  */\n int main(void)\n"
                },
                {
                    "date": 1671541039615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n }\n \n \n void hello(){\n-    \n+    rt_kprintf(\"Hello\")\n }\n \n \n /**\n"
                },
                {
                    "date": 1671541046966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,12 +93,11 @@\n }\n \n \n void hello(){\n-    rt_kprintf(\"Hello\")\n+    rt_kprintf(\"Hello\");\n }\n \n-\n /**\n  * @brief  Main program\n  */\n int main(void)\n@@ -123,9 +122,9 @@\n     //     rt_thread_startup(&led1_thread);\n     // }\n \n     MSH_CMD_EXPORT(led0, led0);\n-    MSH_CMD_EXPORT(led1_thread_entry, led1);\n+    MSH_CMD_EXPORT(hello, led1);\n \n     // while(1)\n     // {\n     //     rt_thread_delay(50);\n"
                },
                {
                    "date": 1671541052485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n     //     rt_thread_startup(&led1_thread);\n     // }\n \n     MSH_CMD_EXPORT(led0, led0);\n-    MSH_CMD_EXPORT(hello, led1);\n+    MSH_CMD_EXPORT(hello, hello world);\n \n     // while(1)\n     // {\n     //     rt_thread_delay(50);\n"
                },
                {
                    "date": 1672228630884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n \n #include <rtthread.h>\n \n #include \"drv_gpio.h\"\n+#include \"drv_usart.h\"\n #include \"pin.h\"\n-#include \"drv_usart.h\"\n #include \"serial.h\"\n \n #ifdef RT_USING_DFS\n /* dfs filesystem:ELM filesystem init */\n@@ -47,54 +47,54 @@\n #include <dfs_fs.h>\n #endif\n \n #ifdef RT_USING_RTGUI\n+#include <rtgui/calibration.h>\n+#include <rtgui/driver.h>\n #include <rtgui/rtgui.h>\n #include <rtgui/rtgui_server.h>\n #include <rtgui/rtgui_system.h>\n-#include <rtgui/driver.h>\n-#include <rtgui/calibration.h>\n #endif\n \n ALIGN(RT_ALIGN_SIZE)\n-static rt_uint8_t led0_stack[ 512 ], led1_stack[ 512 ];\n+static rt_uint8_t led0_stack[512], led1_stack[512];\n \n static struct rt_thread led0_thread;\n static struct rt_thread led1_thread;\n \n-#define LED1_PIN        GET_PIN(A,  8)\n-#define LED3_PIN        GET_PIN(B,  5)\n+#define LED1_PIN GET_PIN(A, 8)\n+#define LED3_PIN GET_PIN(B, 5)\n \n /**\n  * @brief  led0 thread entry\n  */\n-static void led0(void* parameter)\n+static void led0(void *parameter)\n {\n-    while(1)\n+    while (1)\n     {\n-        rt_thread_delay(50);    //delay 500ms\n+        rt_thread_delay(50); // delay 500ms\n         rt_pin_write(LED1_PIN, PIN_HIGH);\n-        rt_thread_delay(50);    //delay 500ms\n+        rt_thread_delay(50); // delay 500ms\n         rt_pin_write(LED1_PIN, PIN_LOW);\n     }\n }\n \n /**\n  * @brief  led1 thread entry\n  */\n-static void led1_thread_entry(void* parameter)\n+static void led1_thread_entry(void *parameter)\n {\n-    while(1)\n+    while (1)\n     {\n-        rt_thread_delay(25);    //delay 250ms\n+        rt_thread_delay(25); // delay 250ms\n         rt_pin_write(LED3_PIN, PIN_HIGH);\n-        rt_thread_delay(25);    //delay 250ms\n+        rt_thread_delay(25); // delay 250ms\n         rt_pin_write(LED3_PIN, PIN_LOW);\n     }\n }\n \n-\n-void hello(){\n+void hello()\n+{\n     rt_kprintf(\"Hello\");\n }\n \n /**\n@@ -128,8 +128,7 @@\n     // while(1)\n     // {\n     //     rt_thread_delay(50);\n     // }\n-    \n }\n \n /*@}*/\n"
                },
                {
                    "date": 1672228703820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n static struct rt_thread led0_thread;\n static struct rt_thread led1_thread;\n \n #define LED1_PIN GET_PIN(A, 8)\n+#define LED1_PIN GET_PIN(A, 8)\n #define LED3_PIN GET_PIN(B, 5)\n \n /**\n  * @brief  led0 thread entry\n"
                },
                {
                    "date": 1672228709713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n static struct rt_thread led0_thread;\n static struct rt_thread led1_thread;\n \n #define LED1_PIN GET_PIN(A, 8)\n-#define LED1_PIN GET_PIN(A, 8)\n+#define KEY1_PIN GET_PIN(A, 8)\n #define LED3_PIN GET_PIN(B, 5)\n \n /**\n  * @brief  led0 thread entry\n"
                },
                {
                    "date": 1672228717844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,11 @@\n static struct rt_thread led0_thread;\n static struct rt_thread led1_thread;\n \n #define LED1_PIN GET_PIN(A, 8)\n-#define KEY1_PIN GET_PIN(A, 8)\n+#define KEY1_PIN GET_PIN(A, 4)\n #define LED3_PIN GET_PIN(B, 5)\n+#define LED3_PIN GET_PIN(B, 6)\n \n /**\n  * @brief  led0 thread entry\n  */\n"
                },
                {
                    "date": 1672228729670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n \n #define LED1_PIN GET_PIN(A, 8)\n #define KEY1_PIN GET_PIN(A, 4)\n #define LED3_PIN GET_PIN(B, 5)\n-#define LED3_PIN GET_PIN(B, 6)\n+#define KEY3_PIN GET_PIN(A, 6)\n \n /**\n  * @brief  led0 thread entry\n  */\n"
                },
                {
                    "date": 1672228755646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n \n-    rt_kprintf(\"UART1\");\n+   \n \n     // /* init led0 thread */\n     // result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n     // if (result == RT_EOK)\n"
                },
                {
                    "date": 1672228762945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,8 +107,9 @@\n     rt_err_t result;\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n+    \n \n    \n \n     // /* init led0 thread */\n@@ -123,10 +124,8 @@\n     // {\n     //     rt_thread_startup(&led1_thread);\n     // }\n \n-    MSH_CMD_EXPORT(led0, led0);\n-    MSH_CMD_EXPORT(hello, hello world);\n \n     // while(1)\n     // {\n     //     rt_thread_delay(50);\n"
                },
                {
                    "date": 1672228768537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n     rt_err_t result;\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n-    \n+    rt_pin\n \n    \n \n     // /* init led0 thread */\n"
                },
                {
                    "date": 1672228774202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n     rt_err_t result;\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n-    rt_pin\n+    rt_pin_mode(key3)\n \n    \n \n     // /* init led0 thread */\n"
                },
                {
                    "date": 1672228786334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n     rt_err_t result;\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n-    rt_pin_mode(key3)\n+    rt_pin_mode(KEY3_PIN,pin_mode)\n \n    \n \n     // /* init led0 thread */\n"
                },
                {
                    "date": 1672228791580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,12 +107,10 @@\n     rt_err_t result;\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n-    rt_pin_mode(KEY3_PIN,pin_mode)\n+    rt_pin_mode(KEY3_PIN, PIN_MODE_INPUT);\n \n-   \n-\n     // /* init led0 thread */\n     // result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n     // if (result == RT_EOK)\n     // {\n"
                },
                {
                    "date": 1672228811935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,18 @@\n \n     rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n     rt_pin_mode(KEY3_PIN, PIN_MODE_INPUT);\n+    rt_pin_mode(KEY1_PIN, PIN_MODE_INPUT);\n \n+\n+\n+    while (/* condition */)\n+    {\n+        /* code */\n+    }\n+    \n+\n     // /* init led0 thread */\n     // result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n     // if (result == RT_EOK)\n     // {\n"
                },
                {
                    "date": 1672228819773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,11 +112,15 @@\n     rt_pin_mode(KEY1_PIN, PIN_MODE_INPUT);\n \n \n \n-    while (/* condition */)\n+    while (1)\n     {\n-        /* code */\n+        if (key)\n+        {\n+            /* code */\n+        }\n+        \n     }\n     \n \n     // /* init led0 thread */\n"
                },
                {
                    "date": 1672228937110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,10 @@\n \n \n     while (1)\n     {\n-        if (key)\n+        \n+        if (KEY1_PIN)\n         {\n             /* code */\n         }\n         \n"
                },
                {
                    "date": 1672228943521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n \n \n     while (1)\n     {\n-        \n+        di\n         if (KEY1_PIN)\n         {\n             /* code */\n         }\n"
                },
                {
                    "date": 1672228951288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n \n \n     while (1)\n     {\n-        di\n+        read\n         if (KEY1_PIN)\n         {\n             /* code */\n         }\n"
                },
                {
                    "date": 1672228975609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n \n \n     while (1)\n     {\n-        read\n+        readc\n         if (KEY1_PIN)\n         {\n             /* code */\n         }\n"
                },
                {
                    "date": 1672228982724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n \n \n     while (1)\n     {\n-        readc\n+        write\n         if (KEY1_PIN)\n         {\n             /* code */\n         }\n"
                },
                {
                    "date": 1672228991484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n \n \n     while (1)\n     {\n-        write\n+        \n         if (KEY1_PIN)\n         {\n             /* code */\n         }\n"
                },
                {
                    "date": 1672229027947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n \n \n     while (1)\n     {\n-        \n+        rt_get\n         if (KEY1_PIN)\n         {\n             /* code */\n         }\n"
                },
                {
                    "date": 1672229037154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n \n \n     while (1)\n     {\n-        rt_pin_get\n+        rt_pin_ge\n         if (KEY1_PIN)\n         {\n             /* code */\n         }\n"
                },
                {
                    "date": 1672662148475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,33 @@\n+\n+#include <rtthread.h>\n+\n+#include \"board.h\"\n+#include \"drv_gpio.h\"\n+#include \"drv_usart.h\"\n+#include \"pin.h\"\n+#include \"serial.h\"\n+\n+#ifdef RT_USING_DFS\n+/* dfs filesystem:ELM filesystem init */\n+#include <dfs_elm.h>\n+/* dfs Filesystem APIs */\n+#include <dfs_fs.h>\n+#endif\n+\n+#include \"beep.h\"\n+\n+ALIGN(RT_ALIGN_SIZE)\n+static rt_uint8_t led0_stack[512], led1_stack[512];\n+\n+static struct rt_thread led0_thread;\n+static struct rt_thread led1_thread;\n+\n+#define LED1_PIN GET_PIN(A, 8)\n+#define KEY1_PIN GET_PIN(A, 4)\n+#define LED3_PIN GET_PIN(B, 5)\n+#define KEY3_PIN GET_PIN(A, 6)\n+\n+int main(void)\n+{\n+    beep_init()\n+}\n"
                }
            ],
            "date": 1671539139122,
            "name": "Commit-0",
            "content": "/*****************************************************************************\n * Copyright (c) 2019, Nations Technologies Inc.\n *\n * All rights reserved.\n * ****************************************************************************\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the disclaimer below.\n *\n * Nations' name may not be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY NATIONS \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE\n * DISCLAIMED. IN NO EVENT SHALL NATIONS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * ****************************************************************************/\n\n/**\n * @file main.c\n * @author Nations\n * @version v1.0.0\n *\n * @copyright Copyright (c) 2019, Nations Technologies Inc. All rights reserved.\n */\n\n#include <rtthread.h>\n\n#include \"drv_gpio.h\"\n#include \"pin.h\"\n#include \"drv_usart.h\"\n#include \"serial.h\"\n\n#ifdef RT_USING_DFS\n/* dfs filesystem:ELM filesystem init */\n#include <dfs_elm.h>\n/* dfs Filesystem APIs */\n#include <dfs_fs.h>\n#endif\n\n#ifdef RT_USING_RTGUI\n#include <rtgui/rtgui.h>\n#include <rtgui/rtgui_server.h>\n#include <rtgui/rtgui_system.h>\n#include <rtgui/driver.h>\n#include <rtgui/calibration.h>\n#endif\n\nALIGN(RT_ALIGN_SIZE)\nstatic rt_uint8_t led0_stack[ 512 ], led1_stack[ 512 ];\n\nstatic struct rt_thread led0_thread;\nstatic struct rt_thread led1_thread;\n\n#define LED1_PIN        GET_PIN(A,  8)\n#define LED3_PIN        GET_PIN(B,  5)\n\n/**\n * @brief  led0 thread entry\n */\nstatic void led0_thread_entry(void* parameter)\n{\n    while(1)\n    {\n        rt_thread_delay(50);    //delay 500ms\n        rt_pin_write(LED1_PIN, PIN_HIGH);\n        rt_thread_delay(50);    //delay 500ms\n        rt_pin_write(LED1_PIN, PIN_LOW);\n    }\n}\n\n/**\n * @brief  led1 thread entry\n */\nstatic void led1_thread_entry(void* parameter)\n{\n    while(1)\n    {\n        rt_thread_delay(25);    //delay 250ms\n        rt_pin_write(LED3_PIN, PIN_HIGH);\n        rt_thread_delay(25);    //delay 250ms\n        rt_pin_write(LED3_PIN, PIN_LOW);\n    }\n}\n\n#ifdef RT_USING_RTGUI\nrt_bool_t cali_setup(void)\n{\n    rt_kprintf(\"cali setup entered\\n\");\n    return RT_FALSE;\n}\n\nvoid cali_store(struct calibration_data *data)\n{\n    rt_kprintf(\"cali finished (%d, %d), (%d, %d)\\n\",\n               data->min_x,\n               data->max_x,\n               data->min_y,\n               data->max_y);\n}\n#endif /* RT_USING_RTGUI */\n\n/**\n * @brief  Main program\n */\nint main(void)\n{\n    rt_err_t result;\n\n    rt_pin_mode(LED1_PIN, PIN_MODE_OUTPUT);\n    rt_pin_mode(LED3_PIN, PIN_MODE_OUTPUT);\n\n    /* init led0 thread */\n    result = rt_thread_init(&led0_thread, \"led0\", led0_thread_entry, RT_NULL, (rt_uint8_t*)&led0_stack[0], sizeof(led0_stack), 4, 5);\n    if (result == RT_EOK)\n    {\n        rt_thread_startup(&led0_thread);\n    }\n    /* init led1 thread */\n    result = rt_thread_init(&led1_thread, \"led1\", led1_thread_entry, RT_NULL, (rt_uint8_t*)&led1_stack[0], sizeof(led1_stack), 5, 5);\n    if (result == RT_EOK)\n    {\n        rt_thread_startup(&led1_thread);\n    }\n\n    while(1)\n    {\n        rt_thread_delay(50);\n    }\n    rsh\n}\n\n/*@}*/\n"
        }
    ]
}