{
    "sourceFile": "packages/rtt-ssd1306/inc/ssd1306.h",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 36,
            "patches": [
                {
                    "date": 1673770156787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1673770162307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,7 +164,6 @@\n void ssd1306_WriteCommand(uint8_t byte);\r\n void ssd1306_WriteData(uint8_t* buffer, size_t buff_size);\r\n SSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len);\r\n \r\n-_END_STD_C\r\n \r\n #endif // __SSD1306_H__\r\n"
                },
                {
                    "date": 1673770228367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,28 +12,9 @@\n \r\n \r\n #include \"ssd1306_conf.h\"\r\n \r\n-#if defined(STM32F0)\r\n-#include \"stm32f0xx_hal.h\"\r\n-#elif defined(STM32F1)\r\n-#include \"stm32f1xx_hal.h\"\r\n-#elif defined(STM32F4)\r\n-#include \"stm32f4xx_hal.h\"\r\n-#include \"stm32f4xx_hal_gpio.h\"\r\n-#elif defined(STM32L0)\r\n-#include \"stm32l0xx_hal.h\"\r\n-#elif defined(STM32L4)\r\n-#include \"stm32l4xx_hal.h\"\r\n-#elif defined(STM32F3)\r\n-#include \"stm32f3xx_hal.h\"\r\n-#elif defined(STM32H7)\r\n-#include \"stm32h7xx_hal.h\"\r\n-#elif defined(STM32F7)\r\n-#include \"stm32f7xx_hal.h\"\r\n-#else\r\n-//#error \"SSD1306 library was tested only on  STM32F0, STM32F1, STM32F3, STM32F4, STM32F7, STM32L0, STM32L4, STM32H7 MCU families. Please modify ssd1306.h if you know what you are doing. Also please send a pull request if it turns out the library works on other MCU's as well!\"\r\n-#endif\r\n+E\r\n \r\n #include \"ssd1306_fonts.h\"\r\n \r\n /* vvv I2C config vvv */\r\n"
                },
                {
                    "date": 1673770236688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n \r\n #include \"ssd1306_conf.h\"\r\n \r\n-E\r\n+#include<drv_i2c.h>\r\n \r\n #include \"ssd1306_fonts.h\"\r\n \r\n /* vvv I2C config vvv */\r\n"
                },
                {
                    "date": 1673770446914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,8 @@\n #include <stddef.h>\r\n \r\n \r\n #include \"ssd1306_conf.h\"\r\n-\r\n #include<drv_i2c.h>\r\n \r\n #include \"ssd1306_fonts.h\"\r\n \r\n"
                },
                {
                    "date": 1673770479722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n \r\n \r\n #include \"ssd1306_conf.h\"\r\n #include<drv_i2c.h>\r\n-\r\n #include \"ssd1306_fonts.h\"\r\n \r\n /* vvv I2C config vvv */\r\n \r\n"
                },
                {
                    "date": 1673770540132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n /* ^^^ I2C config ^^^ */\r\n \r\n /* vvv SPI config vvv */\r\n \r\n+\r\n #ifndef SSD1306_SPI_PORT\r\n #define SSD1306_SPI_PORT        hspi2\r\n #endif\r\n \r\n"
                },
                {
                    "date": 1673770547328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,11 @@\n \r\n /* ^^^ I2C config ^^^ */\r\n \r\n /* vvv SPI config vvv */\r\n+#ifndef 1\r\n \r\n+#endif // !1\r\n \r\n #ifndef SSD1306_SPI_PORT\r\n #define SSD1306_SPI_PORT        hspi2\r\n #endif\r\n"
                },
                {
                    "date": 1673770553926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,11 @@\n \r\n /* ^^^ I2C config ^^^ */\r\n \r\n /* vvv SPI config vvv */\r\n-#ifndef 1\r\n+#ifndef USDING\r\n \r\n-#endif // !1\r\n+#endif // !USDING\r\n \r\n #ifndef SSD1306_SPI_PORT\r\n #define SSD1306_SPI_PORT        hspi2\r\n #endif\r\n"
                },
                {
                    "date": 1673770560499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,11 @@\n \r\n /* ^^^ I2C config ^^^ */\r\n \r\n /* vvv SPI config vvv */\r\n-#ifndef USDING\r\n+#ifndef USDING_SSD1306_SPI\r\n \r\n-#endif // !USDING\r\n+#endif // !USDING_SSD1306_SPI\r\n \r\n #ifndef SSD1306_SPI_PORT\r\n #define SSD1306_SPI_PORT        hspi2\r\n #endif\r\n"
                },
                {
                    "date": 1673770565646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,33 +31,9 @@\n #ifndef USDING_SSD1306_SPI\r\n \r\n #endif // !USDING_SSD1306_SPI\r\n \r\n-#ifndef SSD1306_SPI_PORT\r\n-#define SSD1306_SPI_PORT        hspi2\r\n-#endif\r\n \r\n-#ifndef SSD1306_CS_Port\r\n-#define SSD1306_CS_Port         GPIOB\r\n-#endif\r\n-#ifndef SSD1306_CS_Pin\r\n-#define SSD1306_CS_Pin          GPIO_PIN_12\r\n-#endif\r\n-\r\n-#ifndef SSD1306_DC_Port\r\n-#define SSD1306_DC_Port         GPIOB\r\n-#endif\r\n-#ifndef SSD1306_DC_Pin\r\n-#define SSD1306_DC_Pin          GPIO_PIN_14\r\n-#endif\r\n-\r\n-#ifndef SSD1306_Reset_Port\r\n-#define SSD1306_Reset_Port      GPIOA\r\n-#endif\r\n-#ifndef SSD1306_Reset_Pin\r\n-#define SSD1306_Reset_Pin       GPIO_PIN_8\r\n-#endif\r\n-\r\n /* ^^^ SPI config ^^^ */\r\n \r\n #if defined(SSD1306_USE_I2C)\r\n //extern I2C_HandleTypeDef SSD1306_I2C_PORT;\r\n"
                },
                {
                    "date": 1673771015157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,79 +9,104 @@\n #define __SSD1306_H__\r\n \r\n #include <stddef.h>\r\n \r\n-\r\n #include \"ssd1306_conf.h\"\r\n-#include<drv_i2c.h>\r\n #include \"ssd1306_fonts.h\"\r\n \r\n /* vvv I2C config vvv */\r\n \r\n #ifndef SSD1306_I2C_PORT\r\n-#define SSD1306_I2C_PORT        hi2c1\r\n+#define SSD1306_I2C_PORT hi2c1\r\n #endif\r\n \r\n #ifndef SSD1306_I2C_ADDR\r\n-#define SSD1306_I2C_ADDR        (0x3C << 1)\r\n+#define SSD1306_I2C_ADDR (0x3C << 1)\r\n #endif\r\n \r\n /* ^^^ I2C config ^^^ */\r\n \r\n /* vvv SPI config vvv */\r\n #ifndef USDING_SSD1306_SPI\r\n \r\n+#ifndef SSD1306_SPI_PORT\r\n+#define SSD1306_SPI_PORT hspi2\r\n+#endif\r\n+\r\n+#ifndef SSD1306_CS_Port\r\n+#define SSD1306_CS_Port GPIOB\r\n+#endif\r\n+#ifndef SSD1306_CS_Pin\r\n+#define SSD1306_CS_Pin GPIO_PIN_12\r\n+#endif\r\n+\r\n+#ifndef SSD1306_DC_Port\r\n+#define SSD1306_DC_Port GPIOB\r\n+#endif\r\n+#ifndef SSD1306_DC_Pin\r\n+#define SSD1306_DC_Pin GPIO_PIN_14\r\n+#endif\r\n+\r\n+#ifndef SSD1306_Reset_Port\r\n+#define SSD1306_Reset_Port GPIOA\r\n+#endif\r\n+#ifndef SSD1306_Reset_Pin\r\n+#define SSD1306_Reset_Pin GPIO_PIN_8\r\n+#endif\r\n #endif // !USDING_SSD1306_SPI\r\n \r\n-\r\n /* ^^^ SPI config ^^^ */\r\n \r\n #if defined(SSD1306_USE_I2C)\r\n-//extern I2C_HandleTypeDef SSD1306_I2C_PORT;\r\n+// extern I2C_HandleTypeDef SSD1306_I2C_PORT;\r\n #elif defined(SSD1306_USE_SPI)\r\n extern SPI_HandleTypeDef SSD1306_SPI_PORT;\r\n #else\r\n #error \"You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro!\"\r\n #endif\r\n \r\n // SSD1306 OLED height in pixels\r\n #ifndef SSD1306_HEIGHT\r\n-#define SSD1306_HEIGHT          64\r\n+#define SSD1306_HEIGHT 64\r\n #endif\r\n \r\n // SSD1306 width in pixels\r\n #ifndef SSD1306_WIDTH\r\n-#define SSD1306_WIDTH           128\r\n+#define SSD1306_WIDTH 128\r\n #endif\r\n \r\n // some LEDs don't display anything in first two columns\r\n // #define SSD1306_WIDTH           130\r\n \r\n #ifndef SSD1306_BUFFER_SIZE\r\n-#define SSD1306_BUFFER_SIZE   SSD1306_WIDTH * SSD1306_HEIGHT / 8\r\n+#define SSD1306_BUFFER_SIZE SSD1306_WIDTH *SSD1306_HEIGHT / 8\r\n #endif\r\n \r\n // Enumeration for screen colors\r\n-typedef enum {\r\n+typedef enum\r\n+{\r\n     Black = 0x00, // Black color, no pixel\r\n     White = 0x01  // Pixel is set. Color depends on OLED\r\n } SSD1306_COLOR;\r\n \r\n-typedef enum {\r\n+typedef enum\r\n+{\r\n     SSD1306_OK = 0x00,\r\n-    SSD1306_ERR = 0x01  // Generic error.\r\n+    SSD1306_ERR = 0x01 // Generic error.\r\n } SSD1306_Error_t;\r\n \r\n // Struct to store transformations\r\n-typedef struct {\r\n+typedef struct\r\n+{\r\n     uint16_t CurrentX;\r\n     uint16_t CurrentY;\r\n     uint8_t Inverted;\r\n     uint8_t Initialized;\r\n     uint8_t DisplayOn;\r\n } SSD1306_t;\r\n \r\n-typedef struct {\r\n+typedef struct\r\n+{\r\n     uint8_t x;\r\n     uint8_t y;\r\n } SSD1306_VERTEX;\r\n \r\n@@ -90,9 +115,9 @@\n void ssd1306_Fill(SSD1306_COLOR color);\r\n void ssd1306_UpdateScreen(void);\r\n void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color);\r\n char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color);\r\n-char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color);\r\n+char ssd1306_WriteString(char *str, FontDef Font, SSD1306_COLOR color);\r\n void ssd1306_SetCursor(uint8_t x, uint8_t y);\r\n void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color);\r\n void ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SSD1306_COLOR color);\r\n void ssd1306_DrawCircle(uint8_t par_x, uint8_t par_y, uint8_t par_r, SSD1306_COLOR color);\r\n@@ -119,9 +144,8 @@\n \r\n // Low-level procedures\r\n void ssd1306_Reset(void);\r\n void ssd1306_WriteCommand(uint8_t byte);\r\n-void ssd1306_WriteData(uint8_t* buffer, size_t buff_size);\r\n-SSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len);\r\n+void ssd1306_WriteData(uint8_t *buffer, size_t buff_size);\r\n+SSD1306_Error_t ssd1306_FillBuffer(uint8_t *buf, uint32_t len);\r\n \r\n-\r\n #endif // __SSD1306_H__\r\n"
                },
                {
                    "date": 1673771031462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,32 @@\n #include <stddef.h>\r\n \r\n #include \"ssd1306_conf.h\"\r\n #include \"ssd1306_fonts.h\"\r\n+#include\"rtconfig.h\"\r\n \r\n+// Choose a bus\r\n+#define SSD1306_USE_I2C\r\n+//#define SSD1306_USE_SPI\r\n+\r\n+// I2C Configuration\r\n+#define SSD1306_I2C_PORT        hi2c1\r\n+#define SSD1306_I2C_BUS         PKG_USING_SSD1306_I2C_BUS_NAME\r\n+#define SSD1306_I2C_ADDR        PKG_USING_SSD1306_I2C_ADDRESS\r\n+\r\n+// Mirror the screen if needed\r\n+// #define SSD1306_MIRROR_VERT\r\n+// #define SSD1306_MIRROR_HORIZ\r\n+\r\n+// Set inverse color if needed\r\n+// # define SSD1306_INVERSE_COLOR\r\n+\r\n+// Include only needed fonts\r\n+#define SSD1306_INCLUDE_FONT_6x8\r\n+#define SSD1306_INCLUDE_FONT_7x10\r\n+#define SSD1306_INCLUDE_FONT_11x18\r\n+#define SSD1306_INCLUDE_FONT_16x26\r\n+\r\n /* vvv I2C config vvv */\r\n \r\n #ifndef SSD1306_I2C_PORT\r\n #define SSD1306_I2C_PORT hi2c1\r\n"
                },
                {
                    "date": 1673771036913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,6 @@\n-/**\r\n- * This Library was originally written by Olivier Van den Eede (4ilo) in 2016.\r\n- * Some refactoring was done and SPI support was added by Aleksander Alekseev (afiskon) in 2018.\r\n- *\r\n- * https://github.com/afiskon/stm32-ssd1306\r\n- */\r\n \r\n+\r\n #ifndef __SSD1306_H__\r\n #define __SSD1306_H__\r\n \r\n #include <stddef.h>\r\n"
                },
                {
                    "date": 1673771052243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,37 +42,9 @@\n #endif\r\n \r\n /* ^^^ I2C config ^^^ */\r\n \r\n-/* vvv SPI config vvv */\r\n-#ifndef USDING_SSD1306_SPI\r\n \r\n-#ifndef SSD1306_SPI_PORT\r\n-#define SSD1306_SPI_PORT hspi2\r\n-#endif\r\n-\r\n-#ifndef SSD1306_CS_Port\r\n-#define SSD1306_CS_Port GPIOB\r\n-#endif\r\n-#ifndef SSD1306_CS_Pin\r\n-#define SSD1306_CS_Pin GPIO_PIN_12\r\n-#endif\r\n-\r\n-#ifndef SSD1306_DC_Port\r\n-#define SSD1306_DC_Port GPIOB\r\n-#endif\r\n-#ifndef SSD1306_DC_Pin\r\n-#define SSD1306_DC_Pin GPIO_PIN_14\r\n-#endif\r\n-\r\n-#ifndef SSD1306_Reset_Port\r\n-#define SSD1306_Reset_Port GPIOA\r\n-#endif\r\n-#ifndef SSD1306_Reset_Pin\r\n-#define SSD1306_Reset_Pin GPIO_PIN_8\r\n-#endif\r\n-#endif // !USDING_SSD1306_SPI\r\n-\r\n /* ^^^ SPI config ^^^ */\r\n \r\n #if defined(SSD1306_USE_I2C)\r\n // extern I2C_HandleTypeDef SSD1306_I2C_PORT;\r\n"
                },
                {
                    "date": 1673771060910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,9 @@\n /* ^^^ SPI config ^^^ */\r\n \r\n #if defined(SSD1306_USE_I2C)\r\n // extern I2C_HandleTypeDef SSD1306_I2C_PORT;\r\n-#elif defined(SSD1306_USE_SPI)\r\n-extern SPI_HandleTypeDef SSD1306_SPI_PORT;\r\n+\r\n #else\r\n #error \"You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro!\"\r\n #endif\r\n \r\n"
                },
                {
                    "date": 1673771086223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,14 +45,9 @@\n \r\n \r\n /* ^^^ SPI config ^^^ */\r\n \r\n-#if defined(SSD1306_USE_I2C)\r\n-// extern I2C_HandleTypeDef SSD1306_I2C_PORT;\r\n \r\n-#else\r\n-#error \"You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro!\"\r\n-#endif\r\n \r\n // SSD1306 OLED height in pixels\r\n #ifndef SSD1306_HEIGHT\r\n #define SSD1306_HEIGHT 64\r\n"
                },
                {
                    "date": 1673771124027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,17 +38,11 @@\n #endif\r\n \r\n #ifndef SSD1306_I2C_ADDR\r\n #define SSD1306_I2C_ADDR (0x3C << 1)\r\n-#endif\r\n \r\n-/* ^^^ I2C config ^^^ */\r\n \r\n \r\n-/* ^^^ SPI config ^^^ */\r\n-\r\n-\r\n-\r\n // SSD1306 OLED height in pixels\r\n #ifndef SSD1306_HEIGHT\r\n #define SSD1306_HEIGHT 64\r\n #endif\r\n"
                },
                {
                    "date": 1673771130451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,13 +32,11 @@\n #define SSD1306_INCLUDE_FONT_16x26\r\n \r\n /* vvv I2C config vvv */\r\n \r\n-#ifndef SSD1306_I2C_PORT\r\n+\r\n #define SSD1306_I2C_PORT hi2c1\r\n-#endif\r\n \r\n-#ifndef SSD1306_I2C_ADDR\r\n #define SSD1306_I2C_ADDR (0x3C << 1)\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1673771136841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,12 +37,8 @@\n #define SSD1306_I2C_PORT hi2c1\r\n \r\n #define SSD1306_I2C_ADDR (0x3C << 1)\r\n \r\n-\r\n-\r\n-// SSD1306 OLED height in pixels\r\n-#ifndef SSD1306_HEIGHT\r\n #define SSD1306_HEIGHT 64\r\n #endif\r\n \r\n // SSD1306 width in pixels\r\n"
                },
                {
                    "date": 1673771142703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,21 +32,14 @@\n #define SSD1306_INCLUDE_FONT_16x26\r\n \r\n /* vvv I2C config vvv */\r\n \r\n-\r\n #define SSD1306_I2C_PORT hi2c1\r\n-\r\n #define SSD1306_I2C_ADDR (0x3C << 1)\r\n-\r\n #define SSD1306_HEIGHT 64\r\n-#endif\r\n-\r\n-// SSD1306 width in pixels\r\n-#ifndef SSD1306_WIDTH\r\n #define SSD1306_WIDTH 128\r\n-#endif\r\n \r\n+\r\n // some LEDs don't display anything in first two columns\r\n // #define SSD1306_WIDTH           130\r\n \r\n #ifndef SSD1306_BUFFER_SIZE\r\n"
                },
                {
                    "date": 1673771151325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,20 +29,13 @@\n #define SSD1306_INCLUDE_FONT_6x8\r\n #define SSD1306_INCLUDE_FONT_7x10\r\n #define SSD1306_INCLUDE_FONT_11x18\r\n #define SSD1306_INCLUDE_FONT_16x26\r\n-\r\n-/* vvv I2C config vvv */\r\n-\r\n #define SSD1306_I2C_PORT hi2c1\r\n #define SSD1306_I2C_ADDR (0x3C << 1)\r\n #define SSD1306_HEIGHT 64\r\n #define SSD1306_WIDTH 128\r\n \r\n-\r\n-// some LEDs don't display anything in first two columns\r\n-// #define SSD1306_WIDTH           130\r\n-\r\n #ifndef SSD1306_BUFFER_SIZE\r\n #define SSD1306_BUFFER_SIZE SSD1306_WIDTH *SSD1306_HEIGHT / 8\r\n #endif\r\n \r\n"
                },
                {
                    "date": 1673771156562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,13 +33,11 @@\n #define SSD1306_I2C_PORT hi2c1\r\n #define SSD1306_I2C_ADDR (0x3C << 1)\r\n #define SSD1306_HEIGHT 64\r\n #define SSD1306_WIDTH 128\r\n-\r\n-#ifndef SSD1306_BUFFER_SIZE\r\n #define SSD1306_BUFFER_SIZE SSD1306_WIDTH *SSD1306_HEIGHT / 8\r\n-#endif\r\n \r\n+\r\n // Enumeration for screen colors\r\n typedef enum\r\n {\r\n     Black = 0x00, // Black color, no pixel\r\n"
                },
                {
                    "date": 1673771412829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n \r\n // I2C Configuration\r\n #define SSD1306_I2C_PORT        hi2c1\r\n #define SSD1306_I2C_BUS         PKG_USING_SSD1306_I2C_BUS_NAME\r\n-#define SSD1306_I2C_ADDR        PKG_USING_SSD1306_I2C_ADDRESS\r\n \r\n // Mirror the screen if needed\r\n // #define SSD1306_MIRROR_VERT\r\n // #define SSD1306_MIRROR_HORIZ\r\n"
                },
                {
                    "date": 1673771460989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n #define __SSD1306_H__\r\n \r\n #include <stddef.h>\r\n \r\n-#include \"ssd1306_conf.h\"\r\n #include \"ssd1306_fonts.h\"\r\n #include\"rtconfig.h\"\r\n \r\n // Choose a bus\r\n"
                },
                {
                    "date": 1673771504838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,10 @@\n #define SSD1306_INCLUDE_FONT_6x8\r\n #define SSD1306_INCLUDE_FONT_7x10\r\n #define SSD1306_INCLUDE_FONT_11x18\r\n #define SSD1306_INCLUDE_FONT_16x26\r\n+\r\n+\r\n #define SSD1306_I2C_PORT hi2c1\r\n #define SSD1306_I2C_ADDR (0x3C << 1)\r\n #define SSD1306_HEIGHT 64\r\n #define SSD1306_WIDTH 128\r\n"
                },
                {
                    "date": 1673865220793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n \r\n #include <stddef.h>\r\n \r\n #include \"ssd1306_fonts.h\"\r\n-#include\"rtconfig.h\"\r\n \r\n+\r\n // Choose a bus\r\n #define SSD1306_USE_I2C\r\n //#define SSD1306_USE_SPI\r\n \r\n"
                },
                {
                    "date": 1673865443176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,11 +97,5 @@\n  *          1: ON.\r\n  */\r\n uint8_t ssd1306_GetDisplayOn();\r\n \r\n-// Low-level procedures\r\n-void ssd1306_Reset(void);\r\n-void ssd1306_WriteCommand(uint8_t byte);\r\n-void ssd1306_WriteData(uint8_t *buffer, size_t buff_size);\r\n-SSD1306_Error_t ssd1306_FillBuffer(uint8_t *buf, uint32_t len);\r\n-\r\n #endif // __SSD1306_H__\r\n"
                },
                {
                    "date": 1673865451900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,66 +36,7 @@\n #define SSD1306_WIDTH 128\r\n #define SSD1306_BUFFER_SIZE SSD1306_WIDTH *SSD1306_HEIGHT / 8\r\n \r\n \r\n-// Enumeration for screen colors\r\n-typedef enum\r\n-{\r\n-    Black = 0x00, // Black color, no pixel\r\n-    White = 0x01  // Pixel is set. Color depends on OLED\r\n-} SSD1306_COLOR;\r\n \r\n-typedef enum\r\n-{\r\n-    SSD1306_OK = 0x00,\r\n-    SSD1306_ERR = 0x01 // Generic error.\r\n-} SSD1306_Error_t;\r\n \r\n-// Struct to store transformations\r\n-typedef struct\r\n-{\r\n-    uint16_t CurrentX;\r\n-    uint16_t CurrentY;\r\n-    uint8_t Inverted;\r\n-    uint8_t Initialized;\r\n-    uint8_t DisplayOn;\r\n-} SSD1306_t;\r\n-\r\n-typedef struct\r\n-{\r\n-    uint8_t x;\r\n-    uint8_t y;\r\n-} SSD1306_VERTEX;\r\n-\r\n-// Procedure definitions\r\n-void ssd1306_Init(void);\r\n-void ssd1306_Fill(SSD1306_COLOR color);\r\n-void ssd1306_UpdateScreen(void);\r\n-void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color);\r\n-char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color);\r\n-char ssd1306_WriteString(char *str, FontDef Font, SSD1306_COLOR color);\r\n-void ssd1306_SetCursor(uint8_t x, uint8_t y);\r\n-void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color);\r\n-void ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SSD1306_COLOR color);\r\n-void ssd1306_DrawCircle(uint8_t par_x, uint8_t par_y, uint8_t par_r, SSD1306_COLOR color);\r\n-void ssd1306_Polyline(const SSD1306_VERTEX *par_vertex, uint16_t par_size, SSD1306_COLOR color);\r\n-void ssd1306_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color);\r\n-/**\r\n- * @brief Sets the contrast of the display.\r\n- * @param[in] value contrast to set.\r\n- * @note Contrast increases as the value increases.\r\n- * @note RESET = 7Fh.\r\n- */\r\n-void ssd1306_SetContrast(const uint8_t value);\r\n-/**\r\n- * @brief Set Display ON/OFF.\r\n- * @param[in] on 0 for OFF, any for ON.\r\n- */\r\n-void ssd1306_SetDisplayOn(const uint8_t on);\r\n-/**\r\n- * @brief Reads DisplayOn state.\r\n- * @return  0: OFF.\r\n- *          1: ON.\r\n- */\r\n-uint8_t ssd1306_GetDisplayOn();\r\n-\r\n #endif // __SSD1306_H__\r\n"
                },
                {
                    "date": 1673865461995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,22 +15,8 @@\n // I2C Configuration\r\n #define SSD1306_I2C_PORT        hi2c1\r\n #define SSD1306_I2C_BUS         PKG_USING_SSD1306_I2C_BUS_NAME\r\n \r\n-// Mirror the screen if needed\r\n-// #define SSD1306_MIRROR_VERT\r\n-// #define SSD1306_MIRROR_HORIZ\r\n-\r\n-// Set inverse color if needed\r\n-// # define SSD1306_INVERSE_COLOR\r\n-\r\n-// Include only needed fonts\r\n-#define SSD1306_INCLUDE_FONT_6x8\r\n-#define SSD1306_INCLUDE_FONT_7x10\r\n-#define SSD1306_INCLUDE_FONT_11x18\r\n-#define SSD1306_INCLUDE_FONT_16x26\r\n-\r\n-\r\n #define SSD1306_I2C_PORT hi2c1\r\n #define SSD1306_I2C_ADDR (0x3C << 1)\r\n #define SSD1306_HEIGHT 64\r\n #define SSD1306_WIDTH 128\r\n"
                },
                {
                    "date": 1673865475270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,21 +8,8 @@\n #include \"ssd1306_fonts.h\"\r\n \r\n \r\n // Choose a bus\r\n-#define SSD1306_USE_I2C\r\n-//#define SSD1306_USE_SPI\r\n \r\n-// I2C Configuration\r\n-#define SSD1306_I2C_PORT        hi2c1\r\n-#define SSD1306_I2C_BUS         PKG_USING_SSD1306_I2C_BUS_NAME\r\n \r\n-#define SSD1306_I2C_PORT hi2c1\r\n-#define SSD1306_I2C_ADDR (0x3C << 1)\r\n-#define SSD1306_HEIGHT 64\r\n-#define SSD1306_WIDTH 128\r\n-#define SSD1306_BUFFER_SIZE SSD1306_WIDTH *SSD1306_HEIGHT / 8\r\n \r\n-\r\n-\r\n-\r\n #endif // __SSD1306_H__\r\n"
                },
                {
                    "date": 1673865489597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,7 @@\n #include <stddef.h>\r\n \r\n #include \"ssd1306_fonts.h\"\r\n \r\n+void ssd1306_device_find(void);\r\n \r\n-// Choose a bus\r\n-\r\n-\r\n-\r\n #endif // __SSD1306_H__\r\n"
                },
                {
                    "date": 1673865495437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,7 +6,11 @@\n #include <stddef.h>\r\n \r\n #include \"ssd1306_fonts.h\"\r\n \r\n+\r\n+\r\n+\r\n+\r\n void ssd1306_device_find(void);\r\n \r\n #endif // __SSD1306_H__\r\n"
                },
                {
                    "date": 1673865513913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,22 @@\n \r\n #include \"ssd1306_fonts.h\"\r\n \r\n \r\n+}\r\n \r\n+#define OLED_COLUMN_NUMBER  128\r\n+#define OLED_LINE_NUMBER    32\r\n+#define OLED_PAGE_NUMBER    OLED_LINE_NUMBER / 8\r\n+#define SSD1306_I2C_ADDR    (0x3C << 1)\r\n+#define SSD1306_HEIGHT      64\r\n+#define SSD1306_WIDTH       128\r\n+#define SSD1306_CTRL_CMD    0x00\r\n+#define SSD1306_CTRL_DATA   0x40\r\n+#define SSD1306_MASK_CONT   (0x1 << 7)\r\n+#define SSD1306_BUFFER_SIZE SSD1306_WIDTH *SSD1306_HEIGHT / 8\r\n+static struct rt_i2c_bus_device *i2c_bus;\r\n+const unsigned char *point;\r\n \r\n-\r\n void ssd1306_device_find(void);\r\n \r\n #endif // __SSD1306_H__\r\n"
                },
                {
                    "date": 1673865601254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,10 @@\n+/*\r\n+ * @Author: rx-ted\r\n+ * @Date: 2023-01-15 16:01:24\r\n+ * @LastEditors: rx-ted\r\n+ * @LastEditTime: 2023-01-16 18:40:01\r\n+ */\r\n \r\n \r\n #ifndef __SSD1306_H__\r\n #define __SSD1306_H__\r\n@@ -7,19 +13,17 @@\n \r\n #include \"ssd1306_fonts.h\"\r\n \r\n \r\n-}\r\n-\r\n-#define OLED_COLUMN_NUMBER  128\r\n-#define OLED_LINE_NUMBER    32\r\n-#define OLED_PAGE_NUMBER    OLED_LINE_NUMBER / 8\r\n-#define SSD1306_I2C_ADDR    (0x3C << 1)\r\n-#define SSD1306_HEIGHT      64\r\n-#define SSD1306_WIDTH       128\r\n-#define SSD1306_CTRL_CMD    0x00\r\n-#define SSD1306_CTRL_DATA   0x40\r\n-#define SSD1306_MASK_CONT   (0x1 << 7)\r\n+#define OLED_COLUMN_NUMBER 128\r\n+#define OLED_LINE_NUMBER 32\r\n+#define OLED_PAGE_NUMBER OLED_LINE_NUMBER / 8\r\n+#define SSD1306_I2C_ADDR (0x3C << 1)\r\n+#define SSD1306_HEIGHT 64\r\n+#define SSD1306_WIDTH 128\r\n+#define SSD1306_CTRL_CMD 0x00\r\n+#define SSD1306_CTRL_DATA 0x40\r\n+#define SSD1306_MASK_CONT (0x1 << 7)\r\n #define SSD1306_BUFFER_SIZE SSD1306_WIDTH *SSD1306_HEIGHT / 8\r\n static struct rt_i2c_bus_device *i2c_bus;\r\n const unsigned char *point;\r\n \r\n"
                },
                {
                    "date": 1673865677855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n #ifndef __SSD1306_H__\r\n #define __SSD1306_H__\r\n \r\n #include <stddef.h>\r\n-#include\"\r\n+#include\"r\r\n \r\n \r\n #define OLED_COLUMN_NUMBER 128\r\n #define OLED_LINE_NUMBER 32\r\n"
                },
                {
                    "date": 1673866005554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+/*\r\n+ * @Author: rx-ted\r\n+ * @Date: 2023-01-15 16:01:24\r\n+ * @LastEditors: rx-ted\r\n+ * @LastEditTime: 2023-01-16 18:46:40\r\n+ */\r\n+\r\n+#ifndef __SSD1306_H__\r\n+#define __SSD1306_H__\r\n+\r\n+\r\n+#include \"rtconfig.h\"\r\n+\r\n+\r\n+\r\n+#define OLED_COLUMN_NUMBER 128\r\n+#define OLED_LINE_NUMBER 32\r\n+#define OLED_PAGE_NUMBER OLED_LINE_NUMBER / 8\r\n+#define SSD1306_I2C_ADDR (0x3C << 1)\r\n+#define SSD1306_HEIGHT 64\r\n+#define SSD1306_WIDTH 128\r\n+#define SSD1306_CTRL_CMD 0x00\r\n+#define SSD1306_CTRL_DATA 0x40\r\n+#define SSD1306_MASK_CONT (0x1 << 7)\r\n+#define SSD1306_BUFFER_SIZE SSD1306_WIDTH *SSD1306_HEIGHT / 8\r\n+static struct rt_i2c_bus_device *i2c_bus;\r\n+const unsigned char *point;\r\n+\r\n+void ssd1306_device_find(void);\r\n+\r\n+#endif // __SSD1306_H__\r\n"
                }
            ],
            "date": 1673770156787,
            "name": "Commit-0",
            "content": "/**\r\n * This Library was originally written by Olivier Van den Eede (4ilo) in 2016.\r\n * Some refactoring was done and SPI support was added by Aleksander Alekseev (afiskon) in 2018.\r\n *\r\n * https://github.com/afiskon/stm32-ssd1306\r\n */\r\n\r\n#ifndef __SSD1306_H__\r\n#define __SSD1306_H__\r\n\r\n#include <stddef.h>\r\n\r\n\r\n#include \"ssd1306_conf.h\"\r\n\r\n#if defined(STM32F0)\r\n#include \"stm32f0xx_hal.h\"\r\n#elif defined(STM32F1)\r\n#include \"stm32f1xx_hal.h\"\r\n#elif defined(STM32F4)\r\n#include \"stm32f4xx_hal.h\"\r\n#include \"stm32f4xx_hal_gpio.h\"\r\n#elif defined(STM32L0)\r\n#include \"stm32l0xx_hal.h\"\r\n#elif defined(STM32L4)\r\n#include \"stm32l4xx_hal.h\"\r\n#elif defined(STM32F3)\r\n#include \"stm32f3xx_hal.h\"\r\n#elif defined(STM32H7)\r\n#include \"stm32h7xx_hal.h\"\r\n#elif defined(STM32F7)\r\n#include \"stm32f7xx_hal.h\"\r\n#else\r\n//#error \"SSD1306 library was tested only on  STM32F0, STM32F1, STM32F3, STM32F4, STM32F7, STM32L0, STM32L4, STM32H7 MCU families. Please modify ssd1306.h if you know what you are doing. Also please send a pull request if it turns out the library works on other MCU's as well!\"\r\n#endif\r\n\r\n#include \"ssd1306_fonts.h\"\r\n\r\n/* vvv I2C config vvv */\r\n\r\n#ifndef SSD1306_I2C_PORT\r\n#define SSD1306_I2C_PORT        hi2c1\r\n#endif\r\n\r\n#ifndef SSD1306_I2C_ADDR\r\n#define SSD1306_I2C_ADDR        (0x3C << 1)\r\n#endif\r\n\r\n/* ^^^ I2C config ^^^ */\r\n\r\n/* vvv SPI config vvv */\r\n\r\n#ifndef SSD1306_SPI_PORT\r\n#define SSD1306_SPI_PORT        hspi2\r\n#endif\r\n\r\n#ifndef SSD1306_CS_Port\r\n#define SSD1306_CS_Port         GPIOB\r\n#endif\r\n#ifndef SSD1306_CS_Pin\r\n#define SSD1306_CS_Pin          GPIO_PIN_12\r\n#endif\r\n\r\n#ifndef SSD1306_DC_Port\r\n#define SSD1306_DC_Port         GPIOB\r\n#endif\r\n#ifndef SSD1306_DC_Pin\r\n#define SSD1306_DC_Pin          GPIO_PIN_14\r\n#endif\r\n\r\n#ifndef SSD1306_Reset_Port\r\n#define SSD1306_Reset_Port      GPIOA\r\n#endif\r\n#ifndef SSD1306_Reset_Pin\r\n#define SSD1306_Reset_Pin       GPIO_PIN_8\r\n#endif\r\n\r\n/* ^^^ SPI config ^^^ */\r\n\r\n#if defined(SSD1306_USE_I2C)\r\n//extern I2C_HandleTypeDef SSD1306_I2C_PORT;\r\n#elif defined(SSD1306_USE_SPI)\r\nextern SPI_HandleTypeDef SSD1306_SPI_PORT;\r\n#else\r\n#error \"You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro!\"\r\n#endif\r\n\r\n// SSD1306 OLED height in pixels\r\n#ifndef SSD1306_HEIGHT\r\n#define SSD1306_HEIGHT          64\r\n#endif\r\n\r\n// SSD1306 width in pixels\r\n#ifndef SSD1306_WIDTH\r\n#define SSD1306_WIDTH           128\r\n#endif\r\n\r\n// some LEDs don't display anything in first two columns\r\n// #define SSD1306_WIDTH           130\r\n\r\n#ifndef SSD1306_BUFFER_SIZE\r\n#define SSD1306_BUFFER_SIZE   SSD1306_WIDTH * SSD1306_HEIGHT / 8\r\n#endif\r\n\r\n// Enumeration for screen colors\r\ntypedef enum {\r\n    Black = 0x00, // Black color, no pixel\r\n    White = 0x01  // Pixel is set. Color depends on OLED\r\n} SSD1306_COLOR;\r\n\r\ntypedef enum {\r\n    SSD1306_OK = 0x00,\r\n    SSD1306_ERR = 0x01  // Generic error.\r\n} SSD1306_Error_t;\r\n\r\n// Struct to store transformations\r\ntypedef struct {\r\n    uint16_t CurrentX;\r\n    uint16_t CurrentY;\r\n    uint8_t Inverted;\r\n    uint8_t Initialized;\r\n    uint8_t DisplayOn;\r\n} SSD1306_t;\r\n\r\ntypedef struct {\r\n    uint8_t x;\r\n    uint8_t y;\r\n} SSD1306_VERTEX;\r\n\r\n// Procedure definitions\r\nvoid ssd1306_Init(void);\r\nvoid ssd1306_Fill(SSD1306_COLOR color);\r\nvoid ssd1306_UpdateScreen(void);\r\nvoid ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color);\r\nchar ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color);\r\nchar ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color);\r\nvoid ssd1306_SetCursor(uint8_t x, uint8_t y);\r\nvoid ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color);\r\nvoid ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SSD1306_COLOR color);\r\nvoid ssd1306_DrawCircle(uint8_t par_x, uint8_t par_y, uint8_t par_r, SSD1306_COLOR color);\r\nvoid ssd1306_Polyline(const SSD1306_VERTEX *par_vertex, uint16_t par_size, SSD1306_COLOR color);\r\nvoid ssd1306_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color);\r\n/**\r\n * @brief Sets the contrast of the display.\r\n * @param[in] value contrast to set.\r\n * @note Contrast increases as the value increases.\r\n * @note RESET = 7Fh.\r\n */\r\nvoid ssd1306_SetContrast(const uint8_t value);\r\n/**\r\n * @brief Set Display ON/OFF.\r\n * @param[in] on 0 for OFF, any for ON.\r\n */\r\nvoid ssd1306_SetDisplayOn(const uint8_t on);\r\n/**\r\n * @brief Reads DisplayOn state.\r\n * @return  0: OFF.\r\n *          1: ON.\r\n */\r\nuint8_t ssd1306_GetDisplayOn();\r\n\r\n// Low-level procedures\r\nvoid ssd1306_Reset(void);\r\nvoid ssd1306_WriteCommand(uint8_t byte);\r\nvoid ssd1306_WriteData(uint8_t* buffer, size_t buff_size);\r\nSSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len);\r\n\r\n_END_STD_C\r\n\r\n#endif // __SSD1306_H__\r\n"
        }
    ]
}